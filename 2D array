use (no of col * i + j ) to find memory of 2D array in 1D array

    
#include <iostream>
using namespace std;

void inputarr(int arr[10][10], int row, int col)
{
    for (int i = 0; i < row; i++)
    { // row

        for (int j = 0; j < col; j++)
        { // columb
            cin >> arr[i][j];
        }
    }
}

void printarr(int arr[10][10], int row, int col)
{
    for (int i = 0; i < row; i++)
    { // row

        for (int j = 0; j < col; j++)
        { // columb
            cout << arr[i][j];
        }
        cout << endl;
    }
}

int targetarr(int arr[10][10], int row, int col, int target)
{
    for (int i = 0; i < row; i++)
    { // row

        for (int j = 0; j < col; j++)
        { // columb

            if (target == arr[i][j])
            {

                return true;
            }
        }
        cout << endl;
    }
    return false;
}

int findcolsum(int arr[10][10] , int row , int col){
    int sum = 0 ;
    int min1 = 0 ;
     for (int i = 0; i < col; i++)
    { // row

        for (int j = 0; j < row; j++)
        { // columb

            sum = sum + arr[j][i];
        }
        
        
       cout<<sum<<endl;
       
       
       
       min1 = max(sum , min1);
        sum = 0 ;
    }
    
    
    return min1;
    
}

void degree90(int arr[10][10] , int row , int col){
    //transpose
     cout<<endl;
     int arr2[10][19];
     
     
     int row2 = 0;
     int col2 = 0 ;
     
     for ( col2 = 0; col2 < col; col2++)
    { // row

        for ( row2 = 0; row2 < row; row2++)
        { // columb
            cout << arr[row2][col2];
            arr2[col2][row2] = arr[row2][col2];
        }
        cout << endl;
    }

    //reverse
  
     cout<<endl;
     for(int i = 0 ; i<col2;i++){
         for(int j = row2 -1 ; j>=0;j--){
              cout << arr2[i][j];
         }
          cout << endl;
     }
    
}

void wave(int arr[10][10] , int row , int col){
    // 1 2 3 
    // 4 5 6 
    // 7 8 9 
    
    // 1 2 3 6 5 4 7 8 9 
    
    
    for(int i = 0 ; i < row ; i ++){
        if(i % 2 == 0 ){
            for(int j = 0 ; j < col ; j ++){
                cout<<arr[i][j]<<" ";
            }
        }
        
        else 
        {
            for(int j = col -1 ; j >=0 ; j--){
                 cout<<arr[i][j]<<" ";
            }
        }
    }
    
    
    
    
    
}



void spiral(int arr[10][10] , int row , int col ){
    
     // 1 2 3 1
    // 4 5 6 2
    // 7 8 9 3
    // 1 4 6 0 
    
    // 1 2 3 1 2 3 0 6 4 1 7 4 5 6 9 8 
    cout<<endl;
   int total = row * col;
  int p = 0 , q = 0 ;
  // row start p
  // col start q
   while(total > 0 ){
       
   
   

        for (int j = p; j < col; j++)
        { // columb
            cout << arr[p][j]<<" ";
            total--;
        }
        cout << endl;
        p++;
   

   for(int i = p ; i < row  ; i ++){
         cout << arr[i][col-1]<<" ";
            total--;
   } cout << endl;
   
   
   
  col--;
  
 
  for(int j = col - 1 ; j >= q ; j--){
     
        cout << arr[row - 1][j]<<" ";
            total--;
  } cout << endl;
  
  row--;
  
  
 
  
  
  for(int i = row - 1 ; i >= p ; i--){
        cout << arr[i][q]<<" ";
            total--;
  }cout << endl;
      
      
       q++;
       
   
 
    
  }

    
    
}

int total(int row , int col){
    int c = row * col;
    return c;
}
int main()
{
    // int arr[3] [3] = {1};
    // int arr[3] [3] = {0};
    // int arr[3] [2] = {{1,2} , {4,5} , {3,6}};   // 3 row // 2 col
    // int arr[3] [2] = {1,2,3,4,5,6};

    int row, col;
    cout << "No of row - ";
    cin >> row;
    cout << "No of col - ";
    cin >> col;

    int arr[10][10];
    inputarr(arr, row, col);
    printarr(arr, row, col);
    //int target;
    //cout << "target";
    //cin >> target;
    //cout<<findcolsum(arr,row,col);
    //cout << targetarr(arr, row, col, target);
//wave(arr,row,col);
//degree90(arr,row,col);
spiral(arr,row,col);
    return 0;
}
